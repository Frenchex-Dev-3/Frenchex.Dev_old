name: dotnet package

on: [push]

jobs:
  build_test_deploy:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          source-url: https://nuget.pkg.github.com/Frenchex-Dev-3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install dependencies
        run: dotnet restore Frenchex.Dev.Cli/Frenchex.Dev.Cli.csproj
      - name: Build
        run: dotnet build --configuration Release --no-restore  Frenchex.Dev.Cli/Frenchex.Dev.Cli.csproj
      - name: Test
        run: dotnet test --no-restore --verbosity normal --filter TestCategory!=need-vagrant Frenchex.Dev.Cli/Frenchex.Dev.Cli.csproj
      - name: Create the MSI
        run: devenv .\Frenchex.Dev.Cli\Frenchex.Dev.Cli.sln /project .\SetupWindows\SetupWindows.vdproj /build "Release"
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          OKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: false
      - name: lol
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./SetupWindows\Release\SetupWindows.msi
          asset_name: SetupWindows.msi
          asset_content_type: application/exe
